name: Test e2e aggOracle
on: 
  push:
    branches:
      - '**'
  workflow_dispatch: {}

env:
  POLYCLI_VERSION: v0.1.67 # https://github.com/0xPolygon/polygon-cli/releases/
  ENCLAVE_NAME: cdk

jobs:
  test-e2e-aggOracle:
    strategy:
      fail-fast: false
      matrix:
        go-version: [ 1.22.x ]
        goarch: [ "amd64" ]
        e2e-group:
          - "fork12-pessimistic"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
      env:
        GOARCH: ${{ matrix.goarch }}

    - name: Build Docker
      run: make build-docker
    
    - name: Build Tools
      run: make build-tools
      
    - name: Checkout Kurtosis CDK
      uses: actions/checkout@v4
      with:
        repository: 0xPolygon/kurtosis-cdk
        path: kurtosis-cdk
        ref: main
    
    - name: Install polycli
      run: |
        tmp_dir=$(mktemp -d) 
        curl -L "https://github.com/0xPolygon/polygon-cli/releases/download/${{ env.POLYCLI_VERSION }}/polycli_${{ env.POLYCLI_VERSION }}_linux_amd64.tar.gz" | tar -xz -C "$tmp_dir" 
        mv "$tmp_dir"/* /usr/local/bin/polycli 
        rm -rf "$tmp_dir"
        sudo chmod +x /usr/local/bin/polycli
        /usr/local/bin/polycli version

    - name: Install Kurtosis CDK tools
      uses: ./kurtosis-cdk/.github/actions/setup-kurtosis-cdk

    - name: Replace Agglayer SP1 Prover Key with Github Secrets
      run: |
        sed -i "s/agglayer_prover_sp1_key: null/agglayer_prover_sp1_key: \"${{ secrets.SP1_PRIVATE_KEY }}\"/" ${{ github.workspace }}/kurtosis-cdk/.github/tests/chains/l1-cdk1-cdk2.yml
      # This step will only execute if the necessary secrets are available, preventing failures
      # on pull requests from forked repositories.
      if: ${{ env.agglayer_prover_sp1_key && env.agglayer_prover_sp1_key != '' }}
      env:
        agglayer_prover_sp1_key: ${{ secrets.SP1_PRIVATE_KEY }}

    - name: Deploy L1 chain, cdk-1 PP chain, and cdk-2 Sovereign chain (cdk-erigon sequencer + cdk PP stack + cdk opgeth stack)
      run: kurtosis run --enclave=${{ env.ENCLAVE_NAME }} --args-file=./test/combinations/l1-cdk1-cdk2.yml ${{ github.workspace }}/kurtosis-cdk

    - name: Update the agglayer config
      run: |
        # Download the agglayer config file.
        kurtosis files download ${{ env.ENCLAVE_NAME }} agglayer-config-artifact
        cd agglayer-config-artifact
        # Replace the agglayer config.
        agglayer_container_id="$(docker ps --filter name=agglayer --format json | jq -r -s '. | map(select(.Names | startswith("agglayer--"))) | .[].ID')"
        docker cp agglayer-config.toml "$agglayer_container_id:/etc/zkevm/agglayer-config.toml"
        # Restart the agglayer service.
        kurtosis service stop ${{ env.ENCLAVE_NAME }} agglayer
        kurtosis service start ${{ env.ENCLAVE_NAME }} agglayer

    - name: Inspect enclave
      run: kurtosis enclave inspect ${{ env.ENCLAVE_NAME }}

    - name: Send bridge transactions from L1 to cdk-2
      if: ${{ env.agglayer_prover_sp1_key || env.agglayer_prover_sp1_key != '' }}
      working-directory: ${{ github.workspace }}/kurtosis-cdk/.github/scripts
      shell: bash {0} # By default, GHA runs with `set -e`. This line disables that.
      run: |
        echo "Sending a bridge transaction from L1 to the cdk-2 RPC..."
        l1_rpc_url=http://$(kurtosis port print ${{ env.ENCLAVE_NAME }} el-1-geth-lighthouse rpc)
        l1_prefunded_mnemonic="giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
        private_key=$(cast wallet private-key --mnemonic "$l1_prefunded_mnemonic")
        eth_address=$(cast wallet address --private-key $private_key)
        polycli ulxly bridge asset \
            --bridge-address 0x83F138B325164b162b320F797b57f6f7E235ABAC \
            --destination-network 2 \
            --private-key $private_key \
            --rpc-url $l1_rpc_url \
            --value 10000000000000000000
        if [[ $ret_code -eq 0 ]]; then
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ Deposit transaction successfuly sent!"
        else
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå Deposit transaction failed!"
            exit 1
        fi

        echo "Waiting for deposit to be autoclaimed..."
        sleep 60

        op_rollup_rpc_url=$(kurtosis port print ${{ env.ENCLAVE_NAME }} op-el-1-op-geth-op-node-op-kurtosis rpc)
        while true; do
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] üîÑ Checking if the deposit was claimed..."
          balance=$(cast balance --ether --rpc-url $op_rollup_rpc_url $eth_address)
          result=$(echo "$balance > 0" | bc) # Use bc to compare floating-point numbers
          if [[ "$result" -eq 1 ]]; then
              echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ Deposit claimed, balance is $balance"
              exit 0
          else
              echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå Deposit has not been claimed yet... Retrying in 15 seconds..."
              sleep 15
          fi
        done

      env:
        agglayer_prover_sp1_key: ${{ secrets.SP1_PRIVATE_KEY }}
  
    - name: Bridge from cdk-2 to L1
      if: ${{ env.agglayer_prover_sp1_key || env.agglayer_prover_sp1_key != '' }}
      working-directory: ${{ github.workspace }}/kurtosis-cdk/.github/scripts
      shell: bash {0} # By default, GHA runs with `set -e`. This line disables that.
      run: |
        echo "Sending a bridge transaction from cdk-2 to L1..."
        op_rollup_rpc_url=$(kurtosis port print ${{ env.ENCLAVE_NAME }} op-el-1-op-geth-op-node-op-kurtosis rpc)
        l1_prefunded_mnemonic="giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
        private_key=$(cast wallet private-key --mnemonic "$l1_prefunded_mnemonic")
        eth_address=$(cast wallet address --private-key $private_key)
        polycli ulxly bridge asset \
            --bridge-address 0x9A1f8eA578835d2b7b1e1EB8CD5EE3Bb7692338C \
            --destination-network 0 \
            --private-key $private_key \
            --rpc-url $op_rollup_rpc_url \
            --value $(date +%s) \
            --destination-address 0xC0FFEE0000000000000000000000000000000001
        if [[ $ret_code -eq 0 ]]; then
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ Deposit transaction successfuly sent!"
        else
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå Deposit transaction failed!"
            exit 1
        fi

        bridge_url=$(kurtosis port print ${{ env.ENCLAVE_NAME }} sovereign-bridge-service-001 rpc)
        l1_rpc_url=http://$(kurtosis port print ${{ env.ENCLAVE_NAME }} el-1-geth-lighthouse rpc)
        l1_prefunded_mnemonic="giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
        private_key=$(cast wallet private-key --mnemonic "$l1_prefunded_mnemonic")
        eth_address=$(cast wallet address --private-key $private_key)
        while true; do
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] üîÑ Attempting to claim the deposit..."
          polycli ulxly claim asset \
              --bridge-address 0x83F138B325164b162b320F797b57f6f7E235ABAC \
              --bridge-service-url $bridge_url \
              --deposit-count 0 \
              --destination-address 0xc0FFee0000000000000000000000000000000001 \
              --deposit-network 2 \
              --private-key $private_key \
              --rpc-url $l1_rpc_url
          ret_code="$?"
          if [[ $ret_code -eq 0 ]]; then
              echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ Claim transaction successfuly sent!"
              exit 0
          else
              echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå Claim transaction not available for now. Retrying in 15 seconds..."
              sleep 15
          fi
        done
      env:
        agglayer_prover_sp1_key: ${{ secrets.SP1_PRIVATE_KEY }}

    - name: Bridge from cdk-2 to cdk-1
      if: ${{ env.agglayer_prover_sp1_key || env.agglayer_prover_sp1_key != '' }}
      working-directory: ${{ github.workspace }}/kurtosis-cdk/.github/scripts
      shell: bash {0} # By default, GHA runs with `set -e`. This line disables that.
      run: |
        echo "Sending a bridge transaction from cdk-2 to cdk-1..."
        op_rollup_rpc_url=$(kurtosis port print ${{ env.ENCLAVE_NAME }} op-el-1-op-geth-op-node-op-kurtosis rpc)
        l1_prefunded_mnemonic="giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
        private_key=$(cast wallet private-key --mnemonic "$l1_prefunded_mnemonic")
        eth_address=$(cast wallet address --private-key $private_key)
        polycli ulxly bridge asset \
            --bridge-address 0x9A1f8eA578835d2b7b1e1EB8CD5EE3Bb7692338C \
            --destination-network 1 \
            --private-key $private_key \
            --rpc-url $op_rollup_rpc_url \
            --value $(date +%s) \
            --destination-address 0xC0FFEE0000000000000000000000000000000002
        if [[ $ret_code -eq 0 ]]; then
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ Deposit transaction successfuly sent!"
        else
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå Deposit transaction failed!"
            exit 1
        fi

        l2_rpc_url=$(kurtosis port print ${{ env.ENCLAVE_NAME }} cdk-erigon-rpc-001 rpc)
        bridge_url=$(kurtosis port print ${{ env.ENCLAVE_NAME }} sovereign-bridge-service-001 rpc)
        while true; do
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] üîÑ Attempting to claim the deposit..."
          gas_price=$(cast gas-price --rpc-url $l2_rpc_url)
          polycli ulxly claim asset \
              --bridge-address 0x83F138B325164b162b320F797b57f6f7E235ABAC \
              --bridge-service-url $bridge_url \
              --deposit-count 1 \
              --destination-address 0xc0FFee0000000000000000000000000000000002 \
              --deposit-network 2 \
              --private-key 0x12d7de8621a77640c9241b2595ba78ce443d05e94090365ab3bb5e19df82c625 \
              --rpc-url $l2_rpc_url \
              --gas-price $gas_price
          ret_code="$?"
          if [[ $ret_code -eq 0 ]]; then
              echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ Claim transaction successfuly sent!"
              exit 0
          else
              echo "[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå Claim transaction not available for now. Retrying in 15 seconds..."
              sleep 15
          fi
        done
      env:
        agglayer_prover_sp1_key: ${{ secrets.SP1_PRIVATE_KEY }}

    - name: Dump enclave
      if: ${{ !cancelled() }}
      run: kurtosis enclave dump ${{ env.ENCLAVE_NAME }} ./dump

    - name: Upload enclave dump
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: dump_attach_cdks_${{ github.run_id }}
        path: ./dump
