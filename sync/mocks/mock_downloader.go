// Code generated by mockery v2.50.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Mockdownloader is an autogenerated mock type for the downloader type
type Mockdownloader struct {
	mock.Mock
}

type Mockdownloader_Expecter struct {
	mock *mock.Mock
}

func (_m *Mockdownloader) EXPECT() *Mockdownloader_Expecter {
	return &Mockdownloader_Expecter{mock: &_m.Mock}
}

// Download provides a mock function with given fields: ctx, fromBlock, downloadedCh
func (_m *Mockdownloader) Download(ctx context.Context, fromBlock uint64, downloadedCh chan EVMBlock) {
	_m.Called(ctx, fromBlock, downloadedCh)
}

// Mockdownloader_Download_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Download'
type Mockdownloader_Download_Call struct {
	*mock.Call
}

// Download is a helper method to define mock.On call
//   - ctx context.Context
//   - fromBlock uint64
//   - downloadedCh chan EVMBlock
func (_e *Mockdownloader_Expecter) Download(ctx interface{}, fromBlock interface{}, downloadedCh interface{}) *Mockdownloader_Download_Call {
	return &Mockdownloader_Download_Call{Call: _e.mock.On("Download", ctx, fromBlock, downloadedCh)}
}

func (_c *Mockdownloader_Download_Call) Run(run func(ctx context.Context, fromBlock uint64, downloadedCh chan EVMBlock)) *Mockdownloader_Download_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uint64), args[2].(chan EVMBlock))
	})
	return _c
}

func (_c *Mockdownloader_Download_Call) Return() *Mockdownloader_Download_Call {
	_c.Call.Return()
	return _c
}

func (_c *Mockdownloader_Download_Call) RunAndReturn(run func(context.Context, uint64, chan EVMBlock)) *Mockdownloader_Download_Call {
	_c.Run(run)
	return _c
}

// NewMockdownloader creates a new instance of Mockdownloader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockdownloader(t interface {
	mock.TestingT
	Cleanup(func())
}) *Mockdownloader {
	mock := &Mockdownloader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
